# Workflow para fazer build e deploy de um app React no GitHub Pages
name: Deploy React App to GitHub Pages

# Define quando o workflow deve rodar
on:
  # Roda em pushes para a branch 'develop' (ajuste se sua branch de DEV for outra)
  push:
    branches: ["develop"]

  # Permite rodar este workflow manualmente pela aba Actions no GitHub
  workflow_dispatch:

# Define permissões para o GITHUB_TOKEN para permitir o deploy no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deploy concorrente, cancelando runs antigos na mesma ref
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Usa a action para baixar o código do repo

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Usa a action para configurar o Node.js
        with:
          node-version: "18" # Especifique a versão do Node que seu projeto usa
          cache: "npm" # Habilita cache para 'npm ci' ser mais rápido

      - name: Install dependencies
        run: npm ci # Instala dependências usando package-lock.json (mais rápido e seguro para CI)

      - name: Build React App
        run: npm run build # Roda o script de build do seu package.json
        env:
          # Define variáveis de ambiente necessárias para o build de DEV
          # Pegue o valor de um Secret do GitHub chamado REACT_APP_API_URL
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL_DEV }}
          VITE_API_URL: ${{ secrets.VITE_API_URL_PROD }}
          # Adicione outras variáveis de ambiente se necessário

      - name: Setup Pages
        uses: actions/configure-pages@v4 # Configura o ambiente para o deploy no Pages

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3 # Faz upload da pasta 'build' como um artefato
        with:
          # Pasta que contém os arquivos estáticos após o 'npm run build'
          # Verifique se seu projeto usa 'build' ou 'dist'
          path: "./dist"

  # Job de deploy
  deploy:
    # Requer que o job 'build' seja concluído com sucesso
    needs: build

    # Permissões necessárias para o deploy (já definidas no nível do workflow)
    permissions:
      pages: write
      id-token: write

    # Ambiente de deploy do GitHub Pages (configurado nas Settings > Environments do repo)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Define a URL de output

    # Roda no Ubuntu mais recente
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Action que faz o deploy do artefato no Pages